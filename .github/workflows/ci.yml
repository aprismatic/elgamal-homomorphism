on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  versioning:
    runs-on: ubuntu-latest # roryprimrose/rungitversion only works in linux (uses Docker)
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Fetch tags and master for GitVersion
      run: |
        git fetch --tags
        git branch --create-reflog master origin/master
    - name: GitVersion
      id: gitversion  # step id used as reference for output values
      uses: roryprimrose/rungitversion@v1
    - name: Update project version
      uses: roryprimrose/set-vs-sdk-project-version@v1
      with:
        version: ${{ steps.gitversion.outputs.NuGetVersionV2 }}
        assemblyVersion: ${{ steps.gitversion.outputs.AssemblySemVer }}
        fileVersion: ${{ steps.gitversion.outputs.MajorMinorPatch }}
        informationalVersion: ${{ steps.gitversion.outputs.InformationalVersion }}
    - name: Upload project files with patched version
      uses: actions/upload-artifact@v1
      with:
        name: project-files
        path: .

  build:
    needs: versioning
    runs-on: windows-latest
    steps:
    - name: Download project files with (possibly) patched version
      uses: actions/download-artifact@v1
      with:
        name: project-files
        path: .
    - name: Setup nuget
      uses: warrenbuckley/Setup-Nuget@v1
    - name: Restore packages
      run: nuget restore
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.0
    - name: Build with msbuild
      run: msbuild -p:Configuration=Release
    - name: Run tests
      run: dotnet test --configuration Release --no-build
    - name: Upload build artifacts
      uses: actions/upload-artifact@v1
      with:
        name: build-artifacts
        path: .

  publish:
    needs: build
    runs-on: windows-latest
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v1
      with:
        name: build-artifacts
        path: .
    - name: Pack nuget packages
      run: dotnet pack --configuration Release --include-symbols --no-build
    # - name: Publish nuget packages
    #   run: dotnet nuget push **/*.nupkg --api-key ${{ github.token }} --source "github"