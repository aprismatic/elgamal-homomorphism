on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  pull:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Upload project files
      uses: actions/upload-artifact@v1
      with:
        name: project-files
        path: .

  versioning:
    needs: pull
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download project files
      uses: actions/download-artifact@v1
      with:
        name: project-files
        path: .
    - name: Get the tag version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
    - name: Update project version
      uses: roryprimrose/set-vs-sdk-project-version@v1
      with:
        version: ${{ steps.get_version.outputs.VERSION }}
    - name: Upload project files with patched version
      uses: actions/upload-artifact@v1
      with:
        name: project-files
        path: .

  build:
    needs: pull
    runs-on: windows-latest
    steps:
    - name: Download project files with patched version
      uses: actions/download-artifact@v1
      with:
        name: project-files
        path: .
    - name: Setup nuget
      uses: warrenbuckley/Setup-Nuget@v1
    - name: Restore packages
      run: nuget restore
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.0
    - name: Build with msbuild
      run: msbuild -p:Configuration=Release
    - name: Run tests
      run: dotnet test --configuration Release --no-build
    - name: Upload build artifacts
      uses: actions/upload-artifact@v1
      with:
        name: build-artifacts
        path: .

  publish:
    needs: [versioning, build]
    runs-on: windows-latest
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v1
      with:
        name: build-artifacts
        path: .
    - name: Pack nuget packages
      run: dotnet pack --configuration Release --include-symbols --no-build
    # - name: Publish nuget packages
    #   run: dotnet nuget push **/*.nupkg --api-key ${{ github.token }} --source "github"